// Generated by CoffeeScript 1.3.3
(function() {
  var Neat, describe, ensurePath, environment, error, fs, hashArguments, info, puts, render, resolve, usages, _ref, _ref1,
    __slice = [].slice;

  fs = require('fs');

  resolve = require('path').resolve;

  Neat = require('../neat');

  _ref = Neat.require("utils/commands"), describe = _ref.describe, usages = _ref.usages, environment = _ref.environment, hashArguments = _ref.hashArguments;

  _ref1 = Neat.require("utils/logs"), puts = _ref1.puts, error = _ref1.error, info = _ref1.info;

  render = Neat.require("utils/templates").render;

  ensurePath = Neat.require("utils/files").ensurePath;

  usages('neat generate config:lint {options}', describe('Generates a lint.json configuration for the cake lint task', exports['config:lint'] = function() {
    var args, cb, context, generator, _i;
    generator = arguments[0], args = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), cb = arguments[_i++];
    context = args.empty() ? {} : hashArguments(args);
    return render(__filename, context, function(err, data) {
      var path;
      if (err != null) {
        throw err;
      }
      path = resolve(Neat.root, 'src/config/tasks');
      return ensurePath(path, function(err) {
        path = "" + path + "/lint.json";
        return fs.writeFile(path, data, function(err) {
          if (err) {
            return error("" + ("Can't write " + path).red + "\n\n" + err.stack) && (typeof cb === "function" ? cb() : void 0);
          }
          info(("" + path + " generated").green);
          return typeof cb === "function" ? cb() : void 0;
        });
      });
    });
  }));

}).call(this);
