// Generated by CoffeeScript 1.3.3
(function() {
  var JASMINE, Neat, error, path, puts, queue, red, run, yellow, _ref;

  path = require('path');

  Neat = require('../../../neat');

  queue = require('../../../async').queue;

  run = require('../../../utils/commands').run;

  _ref = require('../../../utils/logs'), error = _ref.error, red = _ref.red, yellow = _ref.yellow, puts = _ref.puts;

  JASMINE = "" + Neat.neatRoot + "/node_modules/.bin/jasmine-node";

  module.exports = function(config) {
    return config.engines.tests.jasmine = function(callback) {
      var args, k, paths, runTest, v;
      if (!path.existsSync(JASMINE)) {
        error("" + (red("Can't find jasmine-node module")) + "\n\nRun " + (yellow('neat install')) + " to install the dependencies.");
        return typeof callback === "function" ? callback() : void 0;
      }
      paths = {
        units: 'test/units',
        functionals: 'test/functionals',
        integrations: 'test/integrations'
      };
      args = ['.', '--color', '--coffee', '--test-dir'];
      runTest = function(name, test) {
        return function(callback) {
          puts(yellow("" + (name.capitalize()) + " tests:"));
          return run(JASMINE, args.concat("" + Neat.root + "/" + test), function(status) {
            return typeof callback === "function" ? callback() : void 0;
          });
        };
      };
      return queue((function() {
        var _results;
        _results = [];
        for (k in paths) {
          v = paths[k];
          _results.push(runTest(k, v));
        }
        return _results;
      })(), function() {
        return typeof callback === "function" ? callback() : void 0;
      });
    };
  };

}).call(this);
