// Generated by CoffeeScript 1.3.3
(function() {
  var Neat, aliases, cmds, describe, environment, error, fs, help, missing, neatBroken, puts, render, renderSync, resolve, run, usages, utils, warn, withHelp, _ref, _ref1, _ref2,
    __slice = [].slice;

  fs = require('fs');

  resolve = require('path').resolve;

  Neat = require('../neat');

  utils = resolve(Neat.neatRoot, "lib/utils");

  _ref = require(resolve(utils, "templates")), render = _ref.render, renderSync = _ref.renderSync;

  _ref1 = require(resolve(utils, "logs")), puts = _ref1.puts, error = _ref1.error, warn = _ref1.warn, missing = _ref1.missing, neatBroken = _ref1.neatBroken;

  cmds = resolve(utils, "commands");

  _ref2 = require(cmds), run = _ref2.run, aliases = _ref2.aliases, usages = _ref2.usages, describe = _ref2.describe, withHelp = _ref2.help, environment = _ref2.environment;

  help = function(pr, commands) {
    var f;
    if (pr == null) {
      return error("No program provided to help");
    }
    if (commands == null) {
      return error("No commands map provided");
    }
    return aliases('h', 'help', environment('production', usages('neat help [command]', describe('Display the help of the specified [command]', withHelp("Display the help of the specified [command].", f = function() {
      var args, c, cb, cmd, command, k, list, listContext, output, _i;
      command = arguments[0], args = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), cb = arguments[_i++];
      if (typeof cb !== 'function') {
        args.push(cb);
      }
      if ((command != null) && typeof command === 'string') {
        cmd = commands[command];
        if (cmd == null) {
          return error(missing("Command " + command)) && (typeof cb === "function" ? cb() : void 0);
        }
      } else {
        list = {};
        for (k in commands) {
          c = commands[k];
          list[c.aliases.join(", ")] = c;
        }
        listContext = {
          list: list,
          title: "Commands:"
        };
        cmd = {
          usages: ['neat [command] [args]...'],
          description: renderSync(resolve(__dirname, "help/_neat")).yellow,
          help: renderSync(resolve(__dirname, "help/_list"), listContext)
        };
      }
      output = function(err, res) {
        return console.log(res) && (typeof cb === "function" ? cb() : void 0);
      };
      if (typeof cmd.help === 'function') {
        return render(__filename, cmd.help.apply(null, args), output);
      } else {
        return render(__filename, cmd, output);
      }
    })))));
  };

  module.exports = {
    help: help
  };

}).call(this);
